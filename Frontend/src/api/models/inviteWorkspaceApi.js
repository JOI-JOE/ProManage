import axios from "axios";
import authClient from "../authClient";

export const acceptInvitation = async (workspaceId, inviteToken) => {
  try {
    const response = await authClient.post(
      `/workspaces/${workspaceId}/invitationSecret/${inviteToken}`
    );
    return response.data;
  } catch (error) {
    console.error("L·ªói khi ch·∫•p nh·∫≠n l·ªùi m·ªùi:", error);
    throw error;
  }
};
export const getInvitationSecretByReferrer = async (
  workspaceId,
  inviteToken
) => {
  try {
    const response = await authClient.get(
      `/workspaces/${workspaceId}/invitationSecret/${inviteToken}`
    );
    return response.data; // Tr·∫£ v·ªÅ d·ªØ li·ªáu t·ª´ API
  } catch (error) {
    console.error("L·ªói khi ch·∫•p nh·∫≠n l·ªùi m·ªùi:", error);
  }
};

export const getInviteWorkspaceById = async (workspaceId) => {
  try {
    const response = await authClient.get(
      `/workspaces/${workspaceId}/invitationSecret`
    );
    return response.data;
  } catch {
    return null; // Tr·∫£ v·ªÅ null n·∫øu c√≥ l·ªói (kh√¥ng log l·ªói)
  }
};

export const createInviteWorkspace = async (workspaceId) => {
  try {
    const response = await authClient.post(
      `/workspaces/${workspaceId}/invitationSecret`
    );
    return response.data;
  } catch (error) {
    console.error("L·ªói khi t·∫°o l·ªùi m·ªùi v√†o workspace:", error);
    throw error;
  }
};

export const cancelInviteWorkspace = async (workspaceId) => {
  try {
    const response = await authClient.delete(
      `workspaces/${workspaceId}/invitationSecret`
    );
    return response.data;
  } catch (error) {
    console.error("L·ªói khi t·∫°o l·ªùi m·ªùi v√†o workspace:", error);
    throw error;
  }
};

export const getValidateMemberInWorkspace = async (workspaceId, memberId) => {
  try {
    const response = await authClient.get(
      `/workspaces/${workspaceId}/members/${memberId}` // Update API endpoint
    );
    return response.data; // Tr·∫£ v·ªÅ d·ªØ li·ªáu t·ª´ API
  } catch (error) {
    console.error("L·ªói khi l·∫•y th√¥ng tin th√†nh vi√™n:", error);
    throw error; // Re-throw the error to be handled by useQuery
  }
};

export const getSearchMembers = async ({ query, idWorkspace }) => {
  try {
    const response = await authClient.get("search/members", {
      params: { idWorkspace, query }, // üî• Truy·ªÅn tham s·ªë v√†o URL
    });
    return response.data;
  } catch (error) {
    console.error("L·ªói khi t√¨m member m·ªõi:", error);
    throw error;
  }
};

export const addMemberToWorkspace = async (workspaceId, userIds) => {
  try {
    const response = await authClient.post(
      `/workspace/${workspaceId}/addMembers`,
      { members: userIds } // G·ª≠i danh s√°ch userIds
    );
    return response.data;
  } catch (error) {
    console.error("‚ùå Error adding members:", error);
    throw error;
  }
};

export const confirmWorkspaceMembers = async (
  workspaceId,
  memberId,
  invitationMessage
) => {
  try {
    const response = await authClient.put(
      `/workspaces/${workspaceId}/members/${memberId}`,
      { invitationMessage } // G·ª≠i d·ªØ li·ªáu l·ªùi m·ªùi trong body
    );
    return response.data;
  } catch (error) {
    console.error("‚ùå Error confirming workspace member:", error);
    throw error;
  }
};
