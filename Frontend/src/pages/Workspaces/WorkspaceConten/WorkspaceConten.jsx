import React, { useState } from "react";
import {
  Box,
  Typography,
  List,
  ListItem,
  ListItemButton,
  ListItemIcon,
  ListItemText,
  Avatar,
  Button,
  Popover,
  TextField,
  Select,
  MenuItem,
} from "@mui/material";
import AccessTimeIcon from "@mui/icons-material/AccessTime";
import StarBorderIcon from "@mui/icons-material/StarBorder";
import PeopleIcon from "@mui/icons-material/People";
import DashboardIcon from "@mui/icons-material/Dashboard";
import ViewStreamIcon from "@mui/icons-material/ViewStream";
import SettingsIcon from "@mui/icons-material/Settings";
import SignalCellularAltOutlinedIcon from "@mui/icons-material/SignalCellularAltOutlined";
import LockIcon from "@mui/icons-material/Lock";
import GroupsIcon from "@mui/icons-material/Groups";
import PublicIcon from "@mui/icons-material/Public";
import { Link } from "react-router-dom";
import CloseIcon from "@mui/icons-material/Close";
import { IconButton } from "@mui/material";
import { Grid } from "@mui/material"; // N·∫øu b·∫°n d√πng Material-UI

const colors = ["#E3F2FD", "#64B5F6", "#1565C0", "#283593", "#8E24AA"];

const WorkspaceConten = () => {
  const [hoveredItem, setHoveredItem] = useState(null);
  const [openModal, setOpenModal] = useState(false);
  const [openPopover, setOpenPopover] = useState(false);
  const [anchorEl, setAnchorEl] = useState(null);
  const [boardTitle, setBoardTitle] = useState("");
  const [selectedBg, setSelectedBg] = useState(null);
  const [workspace, setWorkspace] = useState("default");

  const handleOpen = (event) => {
    setAnchorEl(event.currentTarget);
    setOpenPopover(true);
  };

  const handleChange = (e) => {
    setBoardTitle(e.target.value);
  };

  const handleClose = () => {
    setOpenPopover(false);
    setAnchorEl(null);
  };

  const handleCreateBoard = () => {
    alert(`üéâ B·∫£ng "${boardTitle}" ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!`);
    handleClose();
  };

  return (
    <Box
      sx={{
        width: "60%",
        padding: "20px",
        marginLeft: "auto",
        marginTop: "25px",
      }}
    >
      {/* Danh s√°ch b·∫£ng Trello */}
      <Box sx={{ display: "flex", alignItems: "center", marginBottom: "10px" }}>
        <AccessTimeIcon sx={{ marginRight: "8px" }} />
        <Typography variant="h6">ƒê√£ xem g·∫ßn ƒë√¢y</Typography>
      </Box>

      <List sx={{ display: "flex", gap: "10px", flexWrap: "wrap" }}>
        <ListItem sx={{ width: "auto", padding: 0 }}>
          <Box
            component={Link}
            to="/boardconten"
            sx={{
              width: "180px",
              height: "100px",
              backgroundColor: "#9c2750",
              borderRadius: "8px",
              display: "flex",
              alignItems: "center",
              // justifyContent: "space-between",
              // padding: "10px",
              // position: "relative",
              alignItems: "center",
              justifyContent: "center",
              cursor: "pointer",
              "&:hover": { backgroundColor: "#9A436D" },
            }}
            onMouseEnter={() => setHoveredItem(1)}
            onMouseLeave={() => setHoveredItem(null)}
          >
            <PeopleIcon
              sx={{
                color: "white",
                marginRight: "3px",
                marginTop: "70px",
              }}
            />
            <Typography
              sx={{
                color: "white",
                fontWeight: "bold",
                // marginBottom: "2px",
                // marginRight: "10px",
                // marginLeft: "10px",
                textAlign: "center",
              }}
            >
              B·∫£ng Trello c·ªßa t√¥i
            </Typography>
            {hoveredItem === 1 && (
              <StarBorderIcon
                sx={{
                  color: "white",
                  position: "absolute",
                  right: "10px",
                  top: "70px",
                }}
              />
            )}
          </Box>
        </ListItem>
      </List>

      {/* C√°c kh√¥ng gian l√†m vi·ªác c·ªßa b·∫°n */}
      <Typography
        variant="h6"
        sx={{
          marginTop: "50px",
          marginBottom: "10px",
          fontWeight: "bold",
          textTransform: "uppercase",
        }}
      >
        C√ÅC KH√îNG GIAN L√ÄM VI·ªÜC C·ª¶A B·∫†N
      </Typography>

      <ListItem
        sx={{
          display: "flex",
          alignItems: "center",
          justifyContent: "space-between",
          padding: "10px 0",
          gap: " 20px",
        }}
      >
        {/* Avatar & Ti√™u ƒë·ªÅ */}
        <Box sx={{ display: "flex", alignItems: "center", gap: "10px" }}>
          <Avatar sx={{ bgcolor: "#5D87FF" }}>K</Avatar>
          <Typography fontWeight="bold" sx={{ whiteSpace: "nowrap" }}>
            Trello Kh√¥ng gian l√†m vi·ªác
          </Typography>
        </Box>

        {/* C√°c n√∫t ch·ª©c nƒÉng */}
        <Box
          sx={{
            display: "flex",
            alignItems: "center",
            gap: "8px",
          }}
        >
          <Button
            variant="outlined"
            sx={{
              backgroundColor: "#F8F9FA",
              height: "36px",
              borderRadius: "8px",
              color: "#172B4D",
              textTransform: "none",
              display: "flex",
              alignItems: "center",
              gap: "5px",
            }}
          >
            <DashboardIcon fontSize="small" />
            B·∫£ng
          </Button>

          <Button
            variant="outlined"
            sx={{
              backgroundColor: "#F8F9FA",
              height: "36px",
              width: "130px",
              borderRadius: "8px",
              color: "#172B4D",
              textTransform: "none",
              display: "flex",
              alignItems: "center",
              gap: "5px",
            }}
          >
            <ViewStreamIcon fontSize="small" />
            D·∫°ng xem
          </Button>

          <Button
            variant="outlined"
            sx={{
              backgroundColor: "#F8F9FA",
              height: "36px",
              width: "160px",
              borderRadius: "8px",
              color: "#172B4D",
              textTransform: "none",
              display: "flex",
              alignItems: "center",
              gap: "5px",
            }}
          >
            <PeopleIcon fontSize="small" />
            Th√†nh vi√™n (1)
          </Button>

          <Button
            variant="outlined"
            sx={{
              backgroundColor: "#F8F9FA",
              height: "36px",
              width: "120px",
              borderRadius: "8px",
              color: "#172B4D",
              textTransform: "none",
              display: "flex",
              alignItems: "center",
              gap: "5px",
            }}
          >
            <SettingsIcon fontSize="small" />
            C√†i ƒë·∫∑t
          </Button>

          <Button
            variant="contained"
            sx={{
              backgroundColor: "#EDEBFC",
              height: "36px",
              width: "140px",
              borderRadius: "8px",
              color: "#8250DF",
              textTransform: "none",
              display: "flex",
              alignItems: "center",
              gap: "5px",
            }}
          >
            <SignalCellularAltOutlinedIcon fontSize="small" />
            N√¢ng c·∫•p
          </Button>
        </Box>
      </ListItem>

      {/* Danh s√°ch b·∫£ng Trello */}
      <List sx={{ display: "flex", gap: "20px", flexWrap: "wrap" }}>
        <ListItem sx={{ width: "auto", padding: 0 }}>
          <Box
            component={Link}
            to="/boardconten"
            sx={{
              width: "180px",
              height: "100px",
              backgroundColor: "#9c2750",
              borderRadius: "8px",
              display: "flex",
              alignItems: "center",
              justifyContent: "center",
              cursor: "pointer",
              "&:hover": { backgroundColor: "#9A436D" },
            }}
            onMouseEnter={() => setHoveredItem(2)}
            onMouseLeave={() => setHoveredItem(null)}
          >
            <Typography sx={{ color: "white", fontWeight: "bold" }}>
              B·∫£ng Trello c·ªßa t√¥i
            </Typography>
            {hoveredItem === 2 && (
              <StarBorderIcon
                sx={{
                  color: "white",
                  position: "absolute",
                  right: "10px",
                  top: "70px",
                }}
              />
            )}
          </Box>
        </ListItem>

        <ListItem sx={{ width: "auto", padding: 0 }}>
          <Box
            sx={{
              width: "180px",
              height: "100px",
              backgroundColor: "#EDEBFC",
              borderRadius: "8px",
              display: "flex",
              alignItems: "center",
              justifyContent: "center",
              cursor: "pointer",
              "&:hover": { backgroundColor: "#DCDFE4" },
            }}
            onClick={handleOpen}
          >
            <Typography sx={{ color: "Black", fontWeight: "bold" }}>
              T·∫°o b·∫£ng m·ªõi
            </Typography>
          </Box>
        </ListItem>
      </List>

      {/* N√∫t xem t·∫•t c·∫£ c√°c b·∫£ng ƒë√£ ƒë√≥ng */}
      <Button
        variant="outlined"
        sx={{
          backgroundColor: "#EDEBFC",
          height: "30px",
          width: "250px",
          marginTop: "40px",
        }}
      >
        Xem t·∫•t c·∫£ c√°c b·∫£ng ƒë√£ ƒë√≥ng
      </Button>

      {/* Popover (hi·ªán c·∫°nh n√∫t nh·∫•n) */}
      <Popover
        open={openPopover}
        anchorEl={anchorEl}
        onClose={handleClose}
        anchorOrigin={{
          vertical: "bottom",
          horizontal: "center",
        }}
        transformOrigin={{
          vertical: "top",
          horizontal: "center",
        }}
      >
        <Box
          sx={{
            width: 350,
            p: 2,
            borderRadius: "8px",
            bgcolor: "white",
            boxShadow: 3,
          }}
        >
          <Typography variant="h6" fontWeight="bold" textAlign="center">
            T·∫°o b·∫£ng
          </Typography>

          {/* Ch·ªçn h√¨nh n·ªÅn */}
          <Box
            sx={{
              width: "100%",
              height: "100px",
              background: selectedBg,
              borderRadius: "8px",
            }}
          />

          <Typography variant="subtitle1" mt={2} fontWeight="bold">
            Ph√¥ng n·ªÅn
          </Typography>

          <Grid container spacing={1} mt={1}>
            {colors.map((color, index) => (
              <Grid item key={index}>
                <Box
                  sx={{
                    width: "50px",
                    height: "35px",
                    backgroundColor: color,
                    borderRadius: "4px",
                    cursor: "pointer",
                    border: selectedBg === color ? "2px solid #007BFF" : "none",
                  }}
                  onClick={() => setSelectedBg(color)}
                />
              </Grid>
            ))}
          </Grid>

          <IconButton
            onClick={handleClose}
            sx={{ position: "absolute", top: 8, right: 8 }}
          >
            <CloseIcon />
          </IconButton>

          <Typography variant="h6" mt={2} fontWeight="bold">
            Ti√™u ƒë·ªÅ b·∫£ng <span style={{ color: "red" }}>*</span>
          </Typography>

          {/* √î nh·∫≠p ti√™u ƒë·ªÅ */}
          <TextField
            fullWidth
            label="Ti√™u ƒë·ªÅ b·∫£ng"
            variant="outlined"
            value={boardTitle}
            onChange={(e) => setBoardTitle(e.target.value)}
            error={boardTitle.trim() === ""}
            helperText={
              boardTitle.trim() === "" ? "üëã Ti√™u ƒë·ªÅ b·∫£ng l√† b·∫Øt bu·ªôc" : ""
            }
            sx={{ marginBottom: 2 }}
          />

          <Typography variant="h6" gutterBottom sx={{ fontWeight: "bold" }}>
            Kh√¥ng gian l√†m vi·ªác
          </Typography>
          <Select
            fullWidth
            value={workspace}
            onChange={(e) => setWorkspace(e.target.value)}
            sx={{ marginBottom: 2 }}
          >
            <MenuItem value="workspace1">Workspace 1</MenuItem>
            <MenuItem value="workspace2">Workspace 2</MenuItem>
          </Select>

          <Typography variant="h6" gutterBottom sx={{ fontWeight: "bold" }}>
            Quy·ªÅn xem
          </Typography>
          <Select
            fullWidth
            value={workspace}
            onChange={(e) => setWorkspace(e.target.value)}
            sx={{ marginBottom: 2 }}
          >
            <MenuItem value="default">Kh√¥ng gian l√†m vi·ªác</MenuItem>
            <MenuItem value="private">
              <LockIcon fontSize="small" />
              Ri√™ng t∆∞
            </MenuItem>
            <MenuItem value="workspace">
              <GroupsIcon fontSize="small" />
              Kh√¥ng gian l√†m vi·ªác
            </MenuItem>
            <MenuItem value="public">
              <PublicIcon fontSize="small" />
              C√¥ng khai
            </MenuItem>
          </Select>

          {/* N√∫t t·∫°o b·∫£ng */}
          <Box sx={{ display: "flex", justifyContent: "center", marginTop: 2 }}>
            <Button
              variant="contained"
              color="primary"
              onClick={handleCreateBoard}
              disabled={boardTitle.trim() === ""}
            >
              T·∫°o b·∫£ng
            </Button>
          </Box>
        </Box>
      </Popover>
    </Box>
  );
};

export default WorkspaceConten;
